import com.android.builder.model.ProductFlavor

apply plugin: 'com.android.application'

apply plugin: 'checkstyle'
checkstyle {
    showViolations true
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.google.com' }
}

def openvpn3SwigFiles = new File(buildDir, "generated/source/ovpn3swig/ovpn3")

task ("generateOpenVPN3Swig" ,type:Exec) {
    def swigcmd = "swig"
    // Workaround for Mac OS X since it otherwise does not find swig and I cannot get
    // the Exec task to respect the PATH environment :(
    if (file("/usr/local/bin/swig").exists())
        swigcmd = "/usr/local/bin/swig"

    doFirst {
        mkdir openvpn3SwigFiles
    }
    commandLine swigcmd, "-outdir", openvpn3SwigFiles, "-outcurrentdir", "-c++", "-java", "-package", "net.openvpn.ovpn3",
            "-Isrc/main/cpp/openvpn3/client", "-Isrc/main/cpp/openvpn3/",
            "-o", "${openvpn3SwigFiles}/ovpncli_wrap.cxx", "-oh", "${openvpn3SwigFiles}/ovpncli_wrap.h",
            "src/main/cpp/openvpn3/javacli/ovpncli.i"
\
}

android {
    signingConfigs {
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.0'
    defaultConfig {
        applicationId "net.rroadvpn"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_STL=c++_static'
                //abiFilters "arm64-v8a"
            }
        }
    }
        externalNativeBuild {
            cmake {
                path "src/main/cpp/CMakeLists.txt"
            }
        }
        sourceSets {
            main {
                assets.srcDirs = ['src/main/assets', 'build/ovpnassets']
            }

            normal {
                java.srcDirs = ["src/ovpn3/java/", openvpn3SwigFiles]
            }

            noovpn3 {
            }

            debug {

            }

            release {

            }
        }
        signingConfigs {
            release
        }
        lintOptions {
            enable 'BackButton', 'EasterEgg', 'StopShip', 'IconExpectedSize', 'GradleDynamicVersion', 'NewerVersionAvailable'
            warning 'ImpliedQuantity', 'MissingQuantity'
            disable 'MissingTranslation', 'UnsafeNativeCodeLocation'
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
        flavorDimensions "implementation"
        productFlavors {
            noovpn3 {
                dimension "implementation"
                buildConfigField 'boolean', 'openvpn3', 'false'
            }
            normal {
                dimension "implementation"
                buildConfigField 'boolean', 'openvpn3', 'true'
            }

        }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
        noovpn3 {
        }
        normal {
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:design:28.0.0-rc01'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.google.code.gson:gson:2.8.0'

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.github.tony19:logback-android:1.3.0-2'
}
